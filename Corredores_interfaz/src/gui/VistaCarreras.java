package gui;

import dto.Carrera;
import dto.TiemposCorredor;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableRowSorter;
import logic.LogicaCarrera;
import utils.ExcepcionesPropias;

/**
 *
 * @author silvia
 */
public class VistaCarreras extends javax.swing.JDialog {

    private PantallaPrincipal pantallaPrincipal;
    private TableRowSorter<TableModelTiemposCorredor> sorterCorredores;
    private TableRowSorter<TableModelCarrera> sorterCarreras;
    private Carrera carreraSeleccionada;

    /**
     * Creates new form PantallaCorredor
     *
     * @param parent
     * @param modal
     */
    public VistaCarreras(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.pantallaPrincipal = (PantallaPrincipal) parent;
        initComponents();
        setTitle("Carreras");
        setLocationRelativeTo(null);
        jTableCarreras.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        refrescarTablaCarreras();
        rellenarComboBoxFiltroCarreras();
        refrescarTablaTiemposCorredores();
        rellenarComboBoxFiltroCorredores();
    }

    public Carrera getCarreraSeleccionada() {
        return carreraSeleccionada;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTituloVerCarreras = new javax.swing.JPanel();
        jLabelTituloVerCarreras = new javax.swing.JLabel();
        jPanelTablas = new javax.swing.JPanel();
        jScrollPaneCarreras = new javax.swing.JScrollPane();
        jTableCarreras = new javax.swing.JTable();
        jPanelComboBoxOrdenCarreras = new javax.swing.JPanel();
        jTextFieldFiltrarCarreras = new javax.swing.JTextField();
        jButtonFiltrarCarreras = new javax.swing.JButton();
        jComboBoxFiltroCarreras = new javax.swing.JComboBox<>();
        jScrollPaneCorredores = new javax.swing.JScrollPane();
        jTableTiemposCorredores = new javax.swing.JTable();
        jPanelComboBoxOrdenCorredores = new javax.swing.JPanel();
        jTextFieldFiltrarCorredores = new javax.swing.JTextField();
        jButtonFiltrarCorredores = new javax.swing.JButton();
        jComboBoxFiltroCorredores = new javax.swing.JComboBox<>();
        jButtonNueva = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jButtonAddCorredor = new javax.swing.JButton();
        jButtonBorrarCorredor = new javax.swing.JButton();
        jPanelBotonesListaCarreras = new javax.swing.JPanel();
        jButtonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jPanelTituloVerCarreras.setMaximumSize(new java.awt.Dimension(600, 75));
        jPanelTituloVerCarreras.setMinimumSize(new java.awt.Dimension(600, 75));
        jPanelTituloVerCarreras.setPreferredSize(new java.awt.Dimension(600, 75));

        jLabelTituloVerCarreras.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabelTituloVerCarreras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloVerCarreras.setText("CARRERAS");
        jLabelTituloVerCarreras.setMinimumSize(new java.awt.Dimension(400, 70));
        jLabelTituloVerCarreras.setPreferredSize(new java.awt.Dimension(400, 70));

        javax.swing.GroupLayout jPanelTituloVerCarrerasLayout = new javax.swing.GroupLayout(jPanelTituloVerCarreras);
        jPanelTituloVerCarreras.setLayout(jPanelTituloVerCarrerasLayout);
        jPanelTituloVerCarrerasLayout.setHorizontalGroup(
            jPanelTituloVerCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloVerCarrerasLayout.createSequentialGroup()
                .addContainerGap(198, Short.MAX_VALUE)
                .addComponent(jLabelTituloVerCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jPanelTituloVerCarrerasLayout.setVerticalGroup(
            jPanelTituloVerCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloVerCarrerasLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelTituloVerCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        getContentPane().add(jPanelTituloVerCarreras, java.awt.BorderLayout.PAGE_START);

        jPanelTablas.setMaximumSize(new java.awt.Dimension(800, 475));
        jPanelTablas.setMinimumSize(new java.awt.Dimension(800, 475));
        jPanelTablas.setPreferredSize(new java.awt.Dimension(800, 475));

        jTableCarreras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCarreras.setMaximumSize(new java.awt.Dimension(190, 190));
        jTableCarreras.setMinimumSize(new java.awt.Dimension(100, 190));
        jTableCarreras.setPreferredSize(new java.awt.Dimension(190, 190));
        jTableCarreras.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jTableCarreras.setSelectionForeground(new java.awt.Color(51, 0, 51));
        jTableCarreras.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableCarreras.getTableHeader().setReorderingAllowed(false);
        jTableCarreras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCarrerasMouseClicked(evt);
            }
        });
        jScrollPaneCarreras.setViewportView(jTableCarreras);
        if (jTableCarreras.getColumnModel().getColumnCount() > 0) {
            jTableCarreras.getColumnModel().getColumn(0).setResizable(false);
            jTableCarreras.getColumnModel().getColumn(1).setResizable(false);
            jTableCarreras.getColumnModel().getColumn(2).setResizable(false);
            jTableCarreras.getColumnModel().getColumn(3).setResizable(false);
            jTableCarreras.getColumnModel().getColumn(4).setResizable(false);
        }

        jButtonFiltrarCarreras.setText("Filtrar");
        jButtonFiltrarCarreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarCarrerasActionPerformed(evt);
            }
        });

        jComboBoxFiltroCarreras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanelComboBoxOrdenCarrerasLayout = new javax.swing.GroupLayout(jPanelComboBoxOrdenCarreras);
        jPanelComboBoxOrdenCarreras.setLayout(jPanelComboBoxOrdenCarrerasLayout);
        jPanelComboBoxOrdenCarrerasLayout.setHorizontalGroup(
            jPanelComboBoxOrdenCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComboBoxOrdenCarrerasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelComboBoxOrdenCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldFiltrarCarreras)
                    .addComponent(jButtonFiltrarCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(jComboBoxFiltroCarreras, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelComboBoxOrdenCarrerasLayout.setVerticalGroup(
            jPanelComboBoxOrdenCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComboBoxOrdenCarrerasLayout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(jComboBoxFiltroCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldFiltrarCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jButtonFiltrarCarreras))
        );

        jTableTiemposCorredores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTiemposCorredores.setMaximumSize(new java.awt.Dimension(190, 190));
        jTableTiemposCorredores.setMinimumSize(new java.awt.Dimension(100, 190));
        jTableTiemposCorredores.setPreferredSize(new java.awt.Dimension(190, 190));
        jTableTiemposCorredores.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jTableTiemposCorredores.setSelectionForeground(new java.awt.Color(51, 0, 51));
        jTableTiemposCorredores.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableTiemposCorredores.getTableHeader().setReorderingAllowed(false);
        jScrollPaneCorredores.setViewportView(jTableTiemposCorredores);
        if (jTableTiemposCorredores.getColumnModel().getColumnCount() > 0) {
            jTableTiemposCorredores.getColumnModel().getColumn(0).setResizable(false);
            jTableTiemposCorredores.getColumnModel().getColumn(1).setResizable(false);
            jTableTiemposCorredores.getColumnModel().getColumn(2).setResizable(false);
            jTableTiemposCorredores.getColumnModel().getColumn(3).setResizable(false);
            jTableTiemposCorredores.getColumnModel().getColumn(4).setResizable(false);
            jTableTiemposCorredores.getColumnModel().getColumn(5).setResizable(false);
            jTableTiemposCorredores.getColumnModel().getColumn(6).setResizable(false);
        }

        jButtonFiltrarCorredores.setText("Filtrar");
        jButtonFiltrarCorredores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarCorredoresActionPerformed(evt);
            }
        });

        jComboBoxFiltroCorredores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanelComboBoxOrdenCorredoresLayout = new javax.swing.GroupLayout(jPanelComboBoxOrdenCorredores);
        jPanelComboBoxOrdenCorredores.setLayout(jPanelComboBoxOrdenCorredoresLayout);
        jPanelComboBoxOrdenCorredoresLayout.setHorizontalGroup(
            jPanelComboBoxOrdenCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComboBoxOrdenCorredoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelComboBoxOrdenCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFiltrarCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(jTextFieldFiltrarCorredores)
                    .addComponent(jComboBoxFiltroCorredores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelComboBoxOrdenCorredoresLayout.setVerticalGroup(
            jPanelComboBoxOrdenCorredoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelComboBoxOrdenCorredoresLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addComponent(jComboBoxFiltroCorredores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldFiltrarCorredores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFiltrarCorredores))
        );

        jButtonNueva.setText("Nueva");
        jButtonNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevaActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jButtonAddCorredor.setText("Insertar");
        jButtonAddCorredor.setMaximumSize(new java.awt.Dimension(74, 31));
        jButtonAddCorredor.setMinimumSize(new java.awt.Dimension(74, 31));
        jButtonAddCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCorredorActionPerformed(evt);
            }
        });

        jButtonBorrarCorredor.setText("Borrar");
        jButtonBorrarCorredor.setMaximumSize(new java.awt.Dimension(74, 31));
        jButtonBorrarCorredor.setMinimumSize(new java.awt.Dimension(74, 31));
        jButtonBorrarCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarCorredorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTablasLayout = new javax.swing.GroupLayout(jPanelTablas);
        jPanelTablas.setLayout(jPanelTablasLayout);
        jPanelTablasLayout.setHorizontalGroup(
            jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablasLayout.createSequentialGroup()
                        .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneCorredores)
                            .addGroup(jPanelTablasLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButtonNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonModificar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBorrar)
                                .addGap(0, 153, Short.MAX_VALUE))
                            .addComponent(jScrollPaneCarreras))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanelTablasLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButtonAddCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBorrarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelComboBoxOrdenCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelComboBoxOrdenCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelTablasLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonAddCorredor, jButtonBorrar, jButtonBorrarCorredor, jButtonModificar, jButtonNueva});

        jPanelTablasLayout.setVerticalGroup(
            jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablasLayout.createSequentialGroup()
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelComboBoxOrdenCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonBorrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelComboBoxOrdenCorredores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneCorredores, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBorrarCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelTablasLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonAddCorredor, jButtonBorrar, jButtonBorrarCorredor, jButtonModificar, jButtonNueva});

        getContentPane().add(jPanelTablas, java.awt.BorderLayout.LINE_START);

        jPanelBotonesListaCarreras.setMaximumSize(new java.awt.Dimension(800, 50));
        jPanelBotonesListaCarreras.setMinimumSize(new java.awt.Dimension(800, 50));
        jPanelBotonesListaCarreras.setPreferredSize(new java.awt.Dimension(800, 50));

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotonesListaCarrerasLayout = new javax.swing.GroupLayout(jPanelBotonesListaCarreras);
        jPanelBotonesListaCarreras.setLayout(jPanelBotonesListaCarrerasLayout);
        jPanelBotonesListaCarrerasLayout.setHorizontalGroup(
            jPanelBotonesListaCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBotonesListaCarrerasLayout.createSequentialGroup()
                .addContainerGap(680, Short.MAX_VALUE)
                .addComponent(jButtonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelBotonesListaCarrerasLayout.setVerticalGroup(
            jPanelBotonesListaCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBotonesListaCarrerasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanelBotonesListaCarreras, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    // TABLA CARRERAS
    private void refrescarTablaCarreras() {
        if (jTableCarreras.getSelectedRow() == -1) {
            this.carreraSeleccionada = null;
        }
        TableModelCarrera model = new TableModelCarrera();
        this.jTableCarreras.setModel(model);
        
        this.sorterCarreras = new TableRowSorter<>(model);
        this.jTableCarreras.setRowSorter(sorterCarreras);
        
         List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorterCarreras.setSortKeys(sortKeys);
    }

    // BOTONES
    private void jButtonNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevaActionPerformed
        FormularioCarreras ventanaCarrera = new FormularioCarreras(pantallaPrincipal, true);
        ventanaCarrera.setVisible(true);
        refrescarTablaCarreras();
        refrescarTablaTiemposCorredores();
    }//GEN-LAST:event_jButtonNuevaActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if (this.carreraSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar una carrera", "Selecciona carrera", JOptionPane.INFORMATION_MESSAGE);
        } else if (this.carreraSeleccionada.isCarreraCerrada()) {
            JOptionPane.showMessageDialog(this, "No puedes modificar la carrera porque ya está cerrada", "Carrera cerrada", JOptionPane.INFORMATION_MESSAGE);
        } else {
            FormularioCarreras ventanaCarrera = new FormularioCarreras(pantallaPrincipal, true, this.carreraSeleccionada);
            ventanaCarrera.setVisible(true);
            refrescarTablaCarreras();
            refrescarTablaTiemposCorredores();
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        if (this.carreraSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar una carrera", "Selecciona carrera", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                LogicaCarrera.getInstance().bajaCarrera(this.carreraSeleccionada);
                this.carreraSeleccionada = null;
            } catch (ExcepcionesPropias.CarreraNoEsta ex) {
                JOptionPane.showMessageDialog(this, "La carrera no esta en la lista de carreras", "Carrera no existe", JOptionPane.ERROR_MESSAGE);
            }
            refrescarTablaCarreras();
            refrescarTablaTiemposCorredores();
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    // TABLA TIEMPOS CORREDORES
    private void refrescarTablaTiemposCorredores() {
        ArrayList<TiemposCorredor> corredores = (this.carreraSeleccionada == null) ? (new ArrayList<>()) : (this.carreraSeleccionada.getListaCorredores()); 
        
        // Modelo de la tabla
        TableModelTiemposCorredor model = new TableModelTiemposCorredor(corredores);
        this.jTableTiemposCorredores.setModel(model);
        
        // Sorter para las filas
        sorterCorredores = new TableRowSorter<>(model);
        this.jTableTiemposCorredores.setRowSorter(sorterCorredores);
        
        // Ordenar por defecto
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorterCorredores.setSortKeys(sortKeys);
    }

    private void jButtonAddCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCorredorActionPerformed
        if (this.carreraSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar una carrera", "Carrera no seleccionada", JOptionPane.INFORMATION_MESSAGE);
        } else if (this.carreraSeleccionada.isCarreraCerrada()) {
            JOptionPane.showMessageDialog(this, "No puedes añadir corredores porque la carrera ya está cerrada", "Carrera cerrada", JOptionPane.INFORMATION_MESSAGE);
        } else {
            VistaCorredores ventanaCorredores = new VistaCorredores(pantallaPrincipal, true, this.carreraSeleccionada);
            ventanaCorredores.setVisible(true);
            refrescarTablaCarreras();
            refrescarTablaTiemposCorredores();
        }
    }//GEN-LAST:event_jButtonAddCorredorActionPerformed

    // ENLACE TABLAS
    private void jTableCarrerasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCarrerasMouseClicked
        try {
            this.carreraSeleccionada = LogicaCarrera.getInstance().getCarreras().get(this.jTableCarreras.convertRowIndexToModel(this.jTableCarreras.getSelectedRow()));
            refrescarTablaTiemposCorredores();
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar una carrera", "Selecciona carrera", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jTableCarrerasMouseClicked

    // CORREDORES
    private void jButtonBorrarCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarCorredorActionPerformed
        if (this.carreraSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Tienes que seleccionar una carrera", "Carrera no seleccionada", JOptionPane.INFORMATION_MESSAGE);
        } else if (this.carreraSeleccionada.isCarreraCerrada()) {
            JOptionPane.showMessageDialog(this, "No puedes borrar corredores porque la carrera ya está cerrada", "Carrera cerrada", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                List<TiemposCorredor> corredores = new ArrayList<>();
                for (int  i : this.jTableTiemposCorredores.getSelectedRows()) {
                    corredores.add(this.carreraSeleccionada.getListaCorredores().get(jTableTiemposCorredores.convertRowIndexToModel(i)));
                }
                if (corredores.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Tienes que seleccionar un corredor", "Corredor no seleccionado", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    LogicaCarrera.getInstance().delCorredores(this.carreraSeleccionada, corredores);
                    refrescarTablaTiemposCorredores();
                    refrescarTablaCarreras();
                }
            } catch (ExcepcionesPropias.CarreraCerrada ex) {
                JOptionPane.showMessageDialog(this, "La carrera está cerrada y no se pueden añadir corredores", "Carrera cerrada", JOptionPane.INFORMATION_MESSAGE);
            } catch (ExcepcionesPropias.CorredorNoEsta ex) {
                JOptionPane.showMessageDialog(this, "El corredor no se encuentra en la lista de la carrera", "Corredor no esta", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_jButtonBorrarCorredorActionPerformed

    private void rellenarComboBoxFiltroCorredores(){
        this.jComboBoxFiltroCorredores.setModel(new DefaultComboBoxModel<>(TiemposCorredor.DATOS));
    }
    
    private void jButtonFiltrarCorredoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarCorredoresActionPerformed
        RowFilter<TableModelTiemposCorredor,Integer> rowfilter;
        rowfilter = RowFilter.regexFilter(jTextFieldFiltrarCorredores.getText(), jComboBoxFiltroCorredores.getSelectedIndex());
        sorterCorredores.setRowFilter(rowfilter);
    }//GEN-LAST:event_jButtonFiltrarCorredoresActionPerformed

    private void rellenarComboBoxFiltroCarreras(){
        this.jComboBoxFiltroCarreras.setModel(new DefaultComboBoxModel<>(Carrera.DATOS));
    }
    
    private void jButtonFiltrarCarrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarCarrerasActionPerformed
        RowFilter<TableModelCarrera,Integer> rowfilter;
        rowfilter = RowFilter.regexFilter(jTextFieldFiltrarCarreras.getText(), jComboBoxFiltroCarreras.getSelectedIndex());
        sorterCarreras.setRowFilter(rowfilter);
    }//GEN-LAST:event_jButtonFiltrarCarrerasActionPerformed

    // MODELOS DE TABLA
    public static class TableModelCarrera extends AbstractTableModel {

        @Override
        public String getColumnName(int column) {
            return Carrera.DATOS[column];
        }

        @Override
        public int getRowCount() {
            return LogicaCarrera.getInstance().getCarreras().size();
        }

        @Override
        public int getColumnCount() {
            return Carrera.DATOS.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            String array[] = LogicaCarrera.getInstance().getCarreras().get(rowIndex).toArray();
            return array[columnIndex];
        }

    }

    public static class TableModelTiemposCorredor extends AbstractTableModel {

        private final List<TiemposCorredor> corredoresCarreraSeleccionada;

        public TableModelTiemposCorredor(List<TiemposCorredor> listaCorredores) {
            this.corredoresCarreraSeleccionada = listaCorredores;
        }

        @Override
        public String getColumnName(int column) {
            return TiemposCorredor.DATOS[column];
        }

        @Override
        public int getRowCount() {
            return corredoresCarreraSeleccionada.size();
        }

        @Override
        public int getColumnCount() {
            return TiemposCorredor.DATOS.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            return corredoresCarreraSeleccionada.get(rowIndex).toArray()[columnIndex];
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddCorredor;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonBorrarCorredor;
    private javax.swing.JButton jButtonFiltrarCarreras;
    private javax.swing.JButton jButtonFiltrarCorredores;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNueva;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboBoxFiltroCarreras;
    private javax.swing.JComboBox<String> jComboBoxFiltroCorredores;
    private javax.swing.JLabel jLabelTituloVerCarreras;
    private javax.swing.JPanel jPanelBotonesListaCarreras;
    private javax.swing.JPanel jPanelComboBoxOrdenCarreras;
    private javax.swing.JPanel jPanelComboBoxOrdenCorredores;
    private javax.swing.JPanel jPanelTablas;
    private javax.swing.JPanel jPanelTituloVerCarreras;
    private javax.swing.JScrollPane jScrollPaneCarreras;
    private javax.swing.JScrollPane jScrollPaneCorredores;
    private javax.swing.JTable jTableCarreras;
    private javax.swing.JTable jTableTiemposCorredores;
    private javax.swing.JTextField jTextFieldFiltrarCarreras;
    private javax.swing.JTextField jTextFieldFiltrarCorredores;
    // End of variables declaration//GEN-END:variables
}
